{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 2,
  "iteration": 1689672441671,
  "links": [],
  "panels": [
    {
      "aliasColors": {
        "close": "blue",
        "low": "orange",
        "order/price/LONG/LIMIT": "green",
        "order/price/LONG/TAKE_PROFIT": "super-light-green",
        "order/price/SHORT/LIMIT": "red",
        "order/price/SHORT/TAKE_PROFIT": "super-light-red"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "displayName": "${__field.labels.alias}"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "close {alias=\"close\", category=\"cryptocurrency\", interval=\"5m\", source=\"binance\", symbol=\"BTC\"}"
            },
            "properties": []
          }
        ]
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 23,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.5.7",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "$$hashKey": "object:96",
          "alias": "/order/",
          "lines": false,
          "points": true
        },
        {
          "$$hashKey": "object:150",
          "alias": "volume",
          "yaxis": 2
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "ser= from(bucket: \"quote\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"candlestick\")\r\n  |> filter(fn: (r) => r[\"interval\"] == \"5m\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\" or r._field == \"volume\" or r[\"_field\"] == \"high\" or r[\"_field\"] == \"low\")\r\n  |> filter(fn: (r) => r[\"symbol\"] == \"${symbol}\")\r\n  |> timeShift(duration: 5m)\r\n   |>map(fn: (r) => ({ r with _value: if (r._field == \"volume\" and ${volTram} ) then (r._value * ${VolumeRate}) + ${VolumeBase} else r._value}))     \r\n  |>map(fn: (r) => ({ r with alias: r._field }))     \r\n  |>yield(name: \"ser\")\r\n\r\n",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"quote\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"candlestick\")\r\n  |> filter(fn: (r) => r[\"interval\"] == \"1m\")\r\n  |> filter(fn: (r) => r[\"symbol\"] == \"BTC\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\" or r[\"_field\"] == \"high\" or r[\"_field\"] == \"low\"  or r[\"_field\"] == \"volume\")\r\n  |> timeShift(duration: 1m)\r\n   |>map(fn: (r) => ({ r with _value: if (r._field == \"volume\" and ${volTram} ) then (r._value * ${VolumeRate}) + ${VolumeBase} else r._value}))       \r\n  |>map(fn: (r) => ({ r with alias: \"kbar_1m/\"+r._field }))     ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"quote\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"candlestick\")\r\n  |> filter(fn: (r) => r[\"interval\"] == \"5m\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\" or r[\"_field\"] == \"low\")\r\n  |> filter(fn: (r) => r[\"symbol\"] == \"${symbol}\")\r\n  |> timeShift(duration: 5m)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")  \r\n  |>map(fn: (r) => ({ r with _value: r.high - r.low }))      \r\n   |>map(fn: (r) => ({ r with _value: (r._value * ${HighLowRate}) + ${VolumeBase}}))    \r\n   |>map(fn: (r) => ({ r with alias: \"high-low\" }))     ",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "報價",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:72",
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:73",
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 27,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "BTC",
          "value": "BTC"
        },
        "datasource": "InfluxDB",
        "definition": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"symbol\",\r\n    predicate: (r) => r.source == \"binance\",\r\n    start: -1y\r\n)",
        "description": null,
        "error": null,
        "hide": 1,
        "includeAll": false,
        "label": "symbol",
        "multi": false,
        "name": "symbol",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"symbol\",\r\n    predicate: (r) => r.source == \"binance\",\r\n    start: -1y\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "0.03",
          "value": "0.03"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "label": "periVolumeRated",
        "name": "VolumeRate",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0.03",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "25000.0",
          "value": "25000.0"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "label": "VolumeBase",
        "name": "VolumeBase",
        "options": [
          {
            "selected": true,
            "text": "25000.0",
            "value": "25000.0"
          }
        ],
        "query": "25000.0",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "true",
          "value": "true"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "volTram",
        "multi": false,
        "name": "volTram",
        "options": [
          {
            "selected": true,
            "text": "true",
            "value": "true"
          },
          {
            "selected": false,
            "text": "false",
            "value": "false"
          }
        ],
        "query": "true,false",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "3.0",
          "value": "3.0"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "label": "HighLowRate",
        "name": "HighLowRate",
        "options": [
          {
            "selected": true,
            "text": "3.0",
            "value": "3.0"
          }
        ],
        "query": "3.0",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "utc",
  "title": "k5m(1d)",
  "uid": "NN19k5m1d",
  "version": 51
}
